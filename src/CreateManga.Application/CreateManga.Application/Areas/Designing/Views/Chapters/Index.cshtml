@model IEnumerable<GetAllChaptersViewModel>

@{
    ViewData["Title"] = "All characters";

    bool isHaveUpdatePermissions =
    this.User.IsInRole(RolesConstants.ADMIN_ROLE_NAME) ||
    this.User.IsInRole(RolesConstants.AUTHOR_ROLE_NAME) ||
    this.User.IsInRole(RolesConstants.EDITOR_ROLE_NAME);

    bool isHaveCreateAndDeletePermissions =
        this.User.IsInRole(RolesConstants.ADMIN_ROLE_NAME) ||
        this.User.IsInRole(RolesConstants.AUTHOR_ROLE_NAME);
}

<h1>Characters</h1>
<br />
@if (isHaveCreateAndDeletePermissions)
{
    <div>
        <a class="btn btn-outline-danger" asp-action="Create">Create Chapter</a>
    </div>
}
<br />
<table class="table text-white">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (GetAllChaptersViewModel chapters in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => chapters.Title)
                </td>
                <td>
                    <a class="options-bar" asp-controller="Characters" asp-action="Details" asp-route-id="@chapters.Id">
                        <span>Details</span>
                    </a>

                    @if (isHaveUpdatePermissions)
                    {
                        <span>|</span>
                        <a class="options-bar" asp-controller="Characters" asp-action="Update" asp-route-id="@chapters.Id">
                            Update
                        </a>
                    }
                    @if (isHaveCreateAndDeletePermissions)
                    {
                        <span>|</span>
                        <a class="options-bar" data-toggle="modal" data-target="#modal">
                            Delete
                        </a>
                        <partial name="_ChaptersDeleteModel" model="@Model" />
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
